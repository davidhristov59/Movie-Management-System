# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: movie-recommender
  labels:
    app: movie-recommender

---
# ConfigMap for Application
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: movie-recommender
data:
  MONGO_DATABASE: "moviedb"
  FLASK_ENV: "production"
  MONGO_HOST: "mongodb-service"
  MONGO_PORT: "27017"

---
# Secret for Application
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: movie-recommender
type: Opaque
data:
  MONGO_ROOT_USERNAME: YWRtaW4=  # admin
  MONGO_ROOT_PASSWORD: YWRtaW4=  # admin
  SECRET_KEY: bXlzZWNyZXRrZXk=  # mysecretkey

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: movie-recommender
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: davidh248/movie-backend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5001
          env:
            - name: MONGO_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: MONGO_ROOT_USERNAME
            - name: MONGO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: MONGO_ROOT_PASSWORD
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_HOST
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_PORT
            - name: MONGO_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: MONGO_DATABASE
            - name: MONGO_URI
              value: "mongodb://$(MONGO_ROOT_USERNAME):$(MONGO_ROOT_PASSWORD)@$(MONGO_HOST):$(MONGO_PORT)/$(MONGO_DATABASE)?authSource=admin"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: SECRET_KEY
            - name: FLASK_ENV
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: FLASK_ENV

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: movie-recommender
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: davidh248/movie-frontend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8501
          env:
            - name: API_BASE_URL
              value: "http://backend-service:5001/api"
            - name: BACKEND_URL
              value: "http://backend-service:5001"

---
# Service for Backend
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: movie-recommender
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
    - name: http
      port: 5001
      targetPort: 5001
  type: ClusterIP

---
# Service for Frontend
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: movie-recommender
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 8501
      targetPort: 8501
  type: LoadBalancer

---
# Ingress for Application
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: movie-recommender
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  ingressClassName: nginx
  rules:
  - host: movie-recommender.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 5001
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 8501

---
# Service for MongoDB
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: movie-recommender
  labels:
    app: mongodb
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongodb
  type: ClusterIP

---
# ConfigMap for MongoDB
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: movie-recommender
data:
  MONGO_INITDB_DATABASE: "moviedb"

---
# Secret for MongoDB
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: movie-recommender
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: YWRtaW4=  # admin
  MONGO_INITDB_ROOT_PASSWORD: YWRtaW4=  # admin

---
# StatefulSet for MongoDB
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: movie-recommender
  labels:
    app: mongodb
spec:
  serviceName: "mongodb-service"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:7.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mongodb-config
                  key: MONGO_INITDB_DATABASE
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi