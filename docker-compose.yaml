version: '3.8'


services:
  mongodb:
    image: mongo:6.0
    container_name: movie_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - movie_network

  backend:
#    build:
#      context: ./backend
#      dockerfile: Dockerfile
    image: davidh248/movie-backend:1.0
    container_name: movie_backend
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@movie_mongodb:27017/${MONGO_DATABASE}?authSource=admin
#      MONGO_HOST: mongodb
#      MONGO_PORT: 27017
      DATABASE_NAME: ${MONGO_DATABASE}
      FLASK_ENV: production
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - mongodb
#    volumes:
#      - ./backend:/app
    networks:
      - movie_network

  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
    image: davidh248/movie-frontend:1.0
    container_name: movie_frontend
    restart: unless-stopped
    ports:
#      - "8501:8501"
      - "80:8501"
    environment:
      API_BASE_URL: http://movie_backend:5001/api
      BACKEND_URL: http://movie_backend:5001
    depends_on:
      - backend
#    volumes:
#      - ./frontend:/app
    networks:
      - movie_network

volumes:
  mongodb_data:
    driver: local
    
networks:
  movie_network:
    driver: bridge
